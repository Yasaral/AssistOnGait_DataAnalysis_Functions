function [fitresult, gof] = CurveFitting(t, XDir, YDir, Cycle, xd, yd)
%CREATEFITS(T,XDIR,YDIR,CYCLE,XD,YD)
%  Create fits.
%
%  Data for 'XFit' fit:
%      X Input : t
%      Y Output: XDir
%  Data for 'YFit' fit:
%      X Input : t
%      Y Output: YDir
%  Data for 'CatMeanXFit' fit:
%      X Input : Cycle
%      Y Output: xd
%  Data for 'CatMeanYFit' fit:
%      X Input : Cycle
%      Y Output: yd
%  Output:
%      fitresult : a cell-array of fit objects representing the fits.
%      gof : structure array with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 30-Jul-2021 15:19:04

%% Initialization.

% Initialize arrays to store fits and goodness-of-fit.
fitresult = cell( 4, 1 );
gof = struct( 'sse', cell( 4, 1 ), ...
    'rsquare', [], 'dfe', [], 'adjrsquare', [], 'rmse', [] );

%% Fit: 'XFit'.
[xData, yData] = prepareCurveData( t, XDir );

% Set up fittype and options.
ft = fittype( 'sin7' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [-Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf];
opts.StartPoint = [10.3765295847307 4.90088453960008 -0.450638459764408 10.067514628755 5.02654824574367 0.90700023627249 9.12231942815682 4.64955712731289 -2.27082779213182 6.94273640715227 4.77522083345649 2.17605715452823 3.6966205118906 9.55044166691297 -2.39449634721747 3.17778999847936 4.5238934211693 -1.39933851515305 3.05141549119972 9.42477796076938 -1.15666217811673];

% Fit model to data.
[fitresult{1}, gof(1)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'XFit' );
h = plot( fitresult{1}, xData, yData );
legend( h, 'XDir vs. t', 'XFit', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 't', 'Interpreter', 'none' );
ylabel( 'XDir', 'Interpreter', 'none' );
grid on

%% Fit: 'YFit'.
[xData, yData] = prepareCurveData( t, YDir );

% Set up fittype and options.
ft = fittype( 'sin7' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [-Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf];
opts.StartPoint = [14.5774262929201 0.0628318530717959 3.09373965852682 6.26662887297676 0.125663706143592 -1.52602734204638 4.39473635798207 4.90088453960008 -0.50376273826298 4.29392603443252 5.02654824574367 0.72945232209427 3.38283940716133 4.64955712731289 -2.52483293014503 3.28725107618293 4.77522083345649 1.85074664061885 3.20544604431351 9.55044166691297 2.65748713604291];

% Fit model to data.
[fitresult{2}, gof(2)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'YFit' );
h = plot( fitresult{2}, xData, yData );
legend( h, 'YDir vs. t', 'YFit', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 't', 'Interpreter', 'none' );
ylabel( 'YDir', 'Interpreter', 'none' );
grid on

%% Fit: 'CatMeanXFit'.
[xData, yData] = prepareCurveData( Cycle, xd );

% Set up fittype and options.
ft = fittype( 'fourier4' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [0 0 0 0 0 0 0 0 0 0.0157177868847519];

% Fit model to data.
[fitresult{3}, gof(3)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'CatMeanXFit' );
h = plot( fitresult{3}, xData, yData );
legend( h, 'xd vs. Cycle', 'CatMeanXFit', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'Cycle', 'Interpreter', 'none' );
ylabel( 'xd', 'Interpreter', 'none' );
grid on

%% Fit: 'CatMeanYFit'.
[xData, yData] = prepareCurveData( Cycle, yd );

% Set up fittype and options.
ft = fittype( 'fourier6' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [0 0 0 0 0 0 0 0 0 0 0 0 0 0.0157177868847519];

% Fit model to data.
[fitresult{4}, gof(4)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'CatMeanYFit' );
h = plot( fitresult{4}, xData, yData );
legend( h, 'yd vs. Cycle', 'CatMeanYFit', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'Cycle', 'Interpreter', 'none' );
ylabel( 'yd', 'Interpreter', 'none' );
grid on


